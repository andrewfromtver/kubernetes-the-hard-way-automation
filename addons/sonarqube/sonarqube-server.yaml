apiVersion: v1
kind: PersistentVolume
metadata:
  name: sonarqube-server-data-pv
  labels:
    app: sonarqube-server
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteMany
  storageClassName: sonarqube-server-data
  hostPath:
    path: /mnt/data/sonarqube-server-data
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonarqube-server-data
  namespace: sonarqube
spec:
  storageClassName: sonarqube-server-data
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: sonarqube-server-temp-pv
  labels:
    app: sonarqube-server
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteMany
  storageClassName: sonarqube-server-temp
  hostPath:
    path: /mnt/data/sonarqube-server-temp
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonarqube-server-temp
  namespace: sonarqube
spec:
  storageClassName: sonarqube-server-temp
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: sonarqube-server-logs-pv
  labels:
    app: sonarqube-server
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteMany
  storageClassName: sonarqube-server-logs
  hostPath:
    path: /mnt/data/sonarqube-server-logs
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonarqube-server-logs
  namespace: sonarqube
spec:
  storageClassName: sonarqube-server-logs
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: sonarqube-server-extensions-pv
  labels:
    app: sonarqube-server
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteMany
  storageClassName: sonarqube-server-extensions
  hostPath:
    path: /mnt/data/sonarqube-server-extensions
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonarqube-server-extensions
  namespace: sonarqube
spec:
  storageClassName: sonarqube-server-extensions
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: sonarqube-server
  namespace: sonarqube
spec:
  type: NodePort
  selector:
    app: sonarqube-server
  ports:
    - name: http
      protocol: TCP
      port: 9000
      targetPort: 9000
      nodePort: 30005
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: sonarqube-server
  name: sonarqube-server
  namespace: sonarqube
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarqube-server
  template:
    metadata:
      labels:
        app: sonarqube-server
    spec:
      hostname: sonarqube
      initContainers:
        - name: set-permissions
          image: alpine:3
          command: ["sh", "-c", "chown -R 1000:1000 /opt/sonarqube"]
          volumeMounts:
            - name: sonarqube-server-data
              mountPath: /opt/sonarqube/data
            - name: sonarqube-server-temp
              mountPath: /opt/sonarqube/temp
            - name: sonarqube-server-logs
              mountPath: /opt/sonarqube/logs
            - name: sonarqube-server-extensions
              mountPath: /opt/sonarqube/extensions
      containers:
        - name: sonarqube
          image: sonarqube:lts-community
          resources:
            requests:
              cpu: 500m
              memory: 512Mi
            limits:
              cpu: 1
              memory: 2Gi
          volumeMounts:
            - name: sonarqube-server-data
              mountPath: /opt/sonarqube/data
            - name: sonarqube-server-temp
              mountPath: /opt/sonarqube/temp
            - name: sonarqube-server-logs
              mountPath: /opt/sonarqube/logs
            - name: sonarqube-server-extensions
              mountPath: /opt/sonarqube/extensions
          ports:
            - containerPort: 9000
              name: http
              protocol: TCP
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 15
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 15
          securityContext:
            readOnlyRootFilesystem: true
      volumes:
        - name: sonarqube-server-data
          persistentVolumeClaim:
            claimName: sonarqube-server-data
        - name: sonarqube-server-temp
          persistentVolumeClaim:
            claimName: sonarqube-server-temp
        - name: sonarqube-server-logs
          persistentVolumeClaim:
            claimName: sonarqube-server-logs
        - name: sonarqube-server-extensions
          persistentVolumeClaim:
            claimName: sonarqube-server-extensions
